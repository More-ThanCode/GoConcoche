DROP TABLE IF EXISTS vehicles;
DROP TABLE IF EXISTS renter_profiles;
DROP TABLE IF EXISTS owner_profiles;
DROP TABLE IF EXISTS user_role;
DROP TABLE IF EXISTS registered_users;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS roles;


--roles
CREATE TABLE roles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role VARCHAR(255) UNIQUE NOT NULL
);

--locations
CREATE TABLE locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    city VARCHAR(255) NOT NULL,
    district VARCHAR(255) NOT NULL
);

--registered_users
CREATE TABLE registered_users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    date_of_birth DATE,
    phone_number VARCHAR(255),
    username VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

--user_role
CREATE TABLE user_role (
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES registered_users(id),
    FOREIGN KEY (role_id) REFERENCES roles(id)
);

--owner_profiles
CREATE TABLE owner_profiles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    registered_user_id BIGINT UNIQUE NOT NULL,
    image_url VARCHAR(255),
    FOREIGN KEY (registered_user_id) REFERENCES registered_users(id)
);

--renter-profiles
CREATE TABLE renter_profiles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    registered_user_id BIGINT UNIQUE NOT NULL,
    type_license VARCHAR(255),
    licence_number VARCHAR(255),
    expired_date DATE,
    image_url VARCHAR(255),
    FOREIGN KEY (registered_user_id) REFERENCES registered_users(id)
);

--vehicles
-- NOTE: Assuming 'owner_id' references the 'id' in 'registered_users' and requires a 'location_id' FK.
-- If 'owner_id' references 'owner_profiles', adjust the FK. I've used 'registered_users' as it's common.
CREATE TABLE vehicles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    vin VARCHAR(255) UNIQUE NOT NULL,
    plate_number VARCHAR(255) UNIQUE NOT NULL,
    insurance_number VARCHAR(255),
    model VARCHAR(255),
    brand VARCHAR(255),
    "year" INT,
    color VARCHAR(255),
    seater VARCHAR(255),
    child_seats_number INT,
    fuel_type_car VARCHAR(255),
    fuel_consumption VARCHAR(255),
    image_url VARCHAR(255),
    owner_id BIGINT NOT NULL,
    -- location_id BIGINT, -- You likely need a FK to locations, but it's missing in your DML, so omitted for now.
    FOREIGN KEY (owner_id) REFERENCES registered_users(id)
);


-- roles
INSERT INTO roles (id, role) VALUES (1, 'ADMIN');
INSERT INTO roles (id, role) VALUES (2, 'RENTER');
INSERT INTO roles (id, role) VALUES (3, 'OWNER');
-- ... (resto) ...